schema {
  query: Query
}

scalar Image
scalar Link

interface Paragraph {
  id: Int!
}

scalar Cursor

interface Node {
  id: Int!
}

interface Edge {
  cursor: Cursor!
  node: Node!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

interface Connection {
  edges: [Edge!]!
  nodes: [Node!]!
  pageInfo: PageInfo!
}

type ArticleConnection implements Connection {
  edges: [ArticleEdge!]!
  nodes: [Article!]!
  pageInfo: PageInfo!
}

type ArticleEdge implements Edge {
  cursor: Cursor!
  node: Article!
}

type Query {
  article(id: Int!): Article
  articles(offset: Int = 0, limit: Int = 10): ArticleConnection!
  pages(offset: Int = 0, limit: Int = 10): PageConnection!
  page(id: Int!): Page
  nodes(
    limit: Int
    from: Cursor
    reverseSort: Boolean = false
    reverseDirection: Boolean = false
    sortKey: String
  ): Connection
}

type FormattedText {
  format: String
  raw: String
  processed: String
}

type Article implements Node {
  id: Int!
  title: String!
  author: String
  description: String
  descriptionRichText: String
  content: [Paragraph!]
}

type Page implements Node {
  id: Int!
  title: String
  content: [Paragraph!]
}

type PageConnection {
  total: Int!
  items: [Page!]
}

type LibraryItem {
  id: Int!
  label: String
  paragraphs: [Paragraph!]
}
